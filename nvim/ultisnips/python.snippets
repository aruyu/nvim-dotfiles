snippet ##=
"""
 *  ${0}
"""
endsnippet

snippet __comment=
"""
 *  NOTE      - `!v expand('%:t')`
 *  Author    - Ista
 *
 *  Created   - `date +%Y.%m.%d`
 *  Github    - https://github.com/vine91
 *  Contact   - vine9151@gmail.com
"""
endsnippet

snippet class= "automake class" b
class ${1}:
  """ Class of ${2:$1} """
  
  def __init__(self${3:, parameter}):
    `!p
def format_parameter_name(path):
  parts = path.split(',')
  basic = 'self.'
  cr = '\n        '
  retval = ''

  for part in parts:
    if part != '':
      if part.startswith(' '):
        temp = part.lstrip()
      else:
        temp = part
      retval += basic + temp + ' = ' + temp + cr

  return retval

snip.rv = format_parameter_name(t[3])
`$0
endsnippet

snippet def=
def ${1}(${2:self${3:, parameter}}):
  """ Function of ${4:$1} """
  
  $0
endsnippet

snippet for=
for ${1:i} in ${2:range(${3})}:
  ${5:${3:self.${4}}}$0
endsnippet

snippet ifelif=
if ${1}:
  ${3}

elif ${2:$1}:
  ${0}
endsnippet

snippet ifelse=
if ${1}:
  ${2}

else:
  ${0}
endsnippet

snippet try=
try:
  ${1}

except Exception as ${2:error}:
  ${4:"${3}".format($1)}$0
endsnippet

snippet import= "automake import" b
from ${1} import ${2:`!p
def format_import_name(path):
  parts = path.split('.')

  if len(parts) > 1:
    return re.sub(r'[_\-]', '', parts[-1].title())
  else:
    return re.sub(r'[_\-]', '', parts[0].title())

snip.rv = format_import_name(t[1])
`}$0
endsnippet

snippet "([\S]+(\-[\S]+)+)" "kebab-case to snake_case" r
`!p snip.rv = re.sub('-','_', match.group(1))`$0
endsnippet
