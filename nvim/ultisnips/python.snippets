snippet #=
"""
 *  ${0}
"""
endsnippet

snippet __comment=
"""
 *  NOTE      - `!v expand('%:t')`
 *  Author    - Eira Chae
 *
 *  Created   - `date +%Y.%m.%d`
 *  Github    - https://github.com/vine91
 *  Contact   - vine9151@gmail.com
"""
endsnippet

snippet class=
class ${1}:
    """ Class of ${2:$1} """

    def __init__(self${3:, parameter}):
        `!p
def formatParameterName(path):
  parts = path.split(', ')
  basic = 'self.'
  cr = '\n        '
  retval = ''
  for part in parts:
    if part != '':
      retval += basic + part + ' = ' + part + cr
  return retval
snip.rv = formatParameterName(t[3])
`$0
endsnippet

snippet def=
def ${1}(${2:self${3:, parameter}}):
    """ Function of ${4:$1} """

    $0
endsnippet

snippet for=
for ${1:i} in ${2:range(${3})}:
    ${5:${3:self.${4}}}$0
endsnippet

snippet ifelif=
if ${1}:
    ${3}

elif ${2:$1}:
    ${0}
endsnippet

snippet ifelse=
if ${1}:
    ${2}

else:
    ${0}
endsnippet

snippet try=
try:
    ${1}

except Exception as ${2:error}:
    ${4:"${3}".format($1)}$0
endsnippet

snippet import= "magic import" b
from ${1} import ${2:`!p
def formatImportName(path):
  parts = path.split('.')
  if len(parts) > 1:
    return re.sub(r'[_\-]', '', parts[-1].title())
  else:
    return re.sub(r'[_\-]', '', parts[0].title())
snip.rv = formatImportName(t[1])
`}$0
endsnippet

snippet "([\S]+(\-[\S]+)+)" "kebab-case to snake_case" r
`!p snip.rv = re.sub('-','_', match.group(1))`$0
endsnippet
