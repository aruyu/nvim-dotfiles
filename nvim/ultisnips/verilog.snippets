snippet //=
/*
 *  $0
 */
endsnippet

snippet __comment=
\`timescale 1ns / 1ps
/*
 *  NOTE      - `!v expand('%:t')`
 *  Author    - ${1:Aru}
 *
 *  Created   - `date +%Y.%m.%d`
`!p
def format_comment(path):
  front = " *  "
  if path.startswith("Chae"):
    retval = front + "Website   - http://www.solidwintech.co.kr\n" + \
             front + "Contact   - chaelj@solidwt.co.kr"
  else:
    retval = front + "Github    - https://github.com/aruyu\n" + \
             front + "Contact   - vine9151@gmail.com"
  return retval

snip.rv = format_comment(t[1])
`
 */

$0
endsnippet

snippet module
module ${1} #(
	${2}
)(
	${3}
);

	$0

endmodule
endsnippet

snippet submodule
${1} #(
	${2}
) $1(
	$0
);
endsnippet

snippet parameter
parameter ${1:integer} ${2} = $0
endsnippet

snippet input
input [${1}:0] $0
endsnippet

snippet output
output [${1}:0] $0
endsnippet

snippet inout
inout [${1}:0] $0
endsnippet

snippet wire
wire [${1}:0] $0
endsnippet

snippet reg
reg [${1}:0] $0
endsnippet

snippet assign
assign ${1} = ${2} ? ${3} : $0
endsnippet

snippet always
always @(${1:posedge} ${2:clock}) begin
	$0
end
endsnippet

snippet if
if (${1}) begin
	$0
end
endsnippet

snippet else
else begin
	$0
end
endsnippet

snippet elif
else if (${1}) begin
	$0
end
endsnippet

snippet ifelse
if (${1}) begin
	${2}
end

else begin
	$0
end
endsnippet

snippet case
case (${1})
	${2:0}: ${3}
	default: $0
endcase
endsnippet

snippet casebegin
case (${1})
	${2:0}: begin
		${3}
	end

	default: begin
		$0
	end
endcase
endsnippet

snippet `include
\`include "$0.v"
endsnippet

snippet "([\S]+(\-[\S]+)+)" "kebab-case to snake_case" r
`!p snip.rv = re.sub('-','_', match.group(1))`$0
endsnippet
