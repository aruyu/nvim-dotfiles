snippet ##=
#==
#   $0
#/
endsnippet

snippet __comment=
#!/bin/bash
#==
#   NOTE      - `!v expand('%:t')`
#   Author    - ${1:Aru}
#
#   Created   - `date +%Y.%m.%d`
#   Github    - https://github.com/aruyu
#   Contact   - vine9151@gmail.com
#/



$0
endsnippet

snippet __comment_all=
#!/bin/bash
#==
#   NOTE      - `!v expand('%:t')`
#   Author    - ${1:Aru}
#
#   Created   - `date +%Y.%m.%d`
#   Github    - https://github.com/aruyu
#   Contact   - vine9151@gmail.com
#/



T_CO_RED='\e[1;31m'
T_CO_YELLOW='\e[1;33m'
T_CO_GREEN='\e[1;32m'
T_CO_BLUE='\e[1;34m'
T_CO_GRAY='\e[1;30m'
T_CO_NC='\e[0m'

CURRENT_PROGRESS=0

function script_print()
{
  echo -ne "${T_CO_BLUE}[SCRIPT]${T_CO_NC}\$1"
}

function script_notify_print()
{
  echo -ne "${T_CO_BLUE}[SCRIPT]${T_CO_NC}${T_CO_GREEN}-Notify- \$1${T_CO_NC}"
}

function script_error_print()
{
  echo -ne "${T_CO_BLUE}[SCRIPT]${T_CO_NC}${T_CO_RED}-Error- \$1${T_CO_NC}"
}

function script_println()
{
  echo -ne "${T_CO_BLUE}[SCRIPT]${T_CO_NC}\$1\n"
}

function script_notify_println()
{
  echo -ne "${T_CO_BLUE}[SCRIPT]${T_CO_NC}${T_CO_GREEN}-Notify- \$1${T_CO_NC}\n"
}

function script_error_println()
{
  echo -ne "${T_CO_BLUE}[SCRIPT]${T_CO_NC}${T_CO_RED}-Error- \$1${T_CO_NC}\n"
}

function error_exit()
{
  script_error_println "\$1\n"
  exit 1
}




#==
#   Starting codes in blew
#/

if [[ $EUID ${2:-eq} 0 ]]; then
  error_exit "This script must be run as ${3:USER}!"
fi


$0
endsnippet

snippet if-elif "if elif operator" b
if ${1:command}; then
  ${3:echo}
elif ${2:$1}; then
  $0
fi
endsnippet

snippet case "case operator" b
case ${1:command} in
  ${2:condition} ) ${3:echo};;
  * ) $0;;
esac
endsnippet

snippet function "function definition" b
function ${1:name}()
{
  $0
}
endsnippet
